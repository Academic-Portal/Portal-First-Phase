[{"/home/surya/winter_projects/Portal-First-Phase/src/index.js":"1","/home/surya/winter_projects/Portal-First-Phase/src/App.js":"2","/home/surya/winter_projects/Portal-First-Phase/src/reportWebVitals.js":"3","/home/surya/winter_projects/Portal-First-Phase/src/NavBar.js":"4","/home/surya/winter_projects/Portal-First-Phase/src/Routes.js":"5","/home/surya/winter_projects/Portal-First-Phase/src/issues/Issues.js":"6","/home/surya/winter_projects/Portal-First-Phase/src/study_material/StudyMaterial.js":"7","/home/surya/winter_projects/Portal-First-Phase/src/home/Home.js":"8","/home/surya/winter_projects/Portal-First-Phase/src/issues/DiscussionThread/DiscussionThread.js":"9","/home/surya/winter_projects/Portal-First-Phase/src/issues/IssueCard.js":"10","/home/surya/winter_projects/Portal-First-Phase/src/issues/DiscussionThread/Comment.js":"11","/home/surya/winter_projects/Portal-First-Phase/src/auth/Login.js":"12","/home/surya/winter_projects/Portal-First-Phase/src/auth/Register.js":"13","/home/surya/winter_projects/Portal-First-Phase/src/context/UserContext.js":"14","/home/surya/winter_projects/Portal-First-Phase/src/service/index.js":"15"},{"size":547,"mtime":1610161422986,"results":"16","hashOfConfig":"17"},{"size":492,"mtime":1610884036838,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1610161422986,"results":"19","hashOfConfig":"17"},{"size":1927,"mtime":1610187762868,"results":"20","hashOfConfig":"17"},{"size":1176,"mtime":1610880914574,"results":"21","hashOfConfig":"17"},{"size":3638,"mtime":1610888995381,"results":"22","hashOfConfig":"17"},{"size":501,"mtime":1610187743211,"results":"23","hashOfConfig":"17"},{"size":536,"mtime":1610187729561,"results":"24","hashOfConfig":"17"},{"size":3272,"mtime":1610884022503,"results":"25","hashOfConfig":"17"},{"size":1331,"mtime":1610888215314,"results":"26","hashOfConfig":"17"},{"size":540,"mtime":1610883004885,"results":"27","hashOfConfig":"17"},{"size":887,"mtime":1610453581462,"results":"28","hashOfConfig":"17"},{"size":896,"mtime":1610453969314,"results":"29","hashOfConfig":"17"},{"size":71,"mtime":1610453242253,"results":"30","hashOfConfig":"17"},{"size":600,"mtime":1610888778556,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1804toi",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/surya/winter_projects/Portal-First-Phase/src/index.js",[],["70","71"],"/home/surya/winter_projects/Portal-First-Phase/src/App.js",["72"],"import './App.css';\n\nimport React, { useState } from \"react\";\n\nimport Navbar from \"./NavBar\";\nimport Routes from \"./Routes\";\n\nimport UserContext from './context/UserContext';\n\n\nfunction App() {\n\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  });\n\nconst userInfo = {userData, setUserData};\n\n  return (\n    <div>\n      <UserContext.Provider value={userInfo}>\n        <Routes />\n      </UserContext.Provider>\n    </div>    \n  );\n}\n\nexport default App;\n","/home/surya/winter_projects/Portal-First-Phase/src/reportWebVitals.js",[],"/home/surya/winter_projects/Portal-First-Phase/src/NavBar.js",["73","74"],"import React, {useContext} from \"react\";\nimport { Navbar, Nav, Form, Button, FormControl } from \"react-bootstrap\";\nimport {useHistory, Link} from 'react-router-dom';\nimport './NavBar.css';\n\nimport UserContext from './context/UserContext';\n\nfunction NavBar() {\n\n    const {userData, setUserData} = useContext(UserContext);\n    \n    const history = useHistory();\n\n    const register = () => {\n        history.push(\"/register\");\n    }\n\n    const login = () => {\n        history.push(\"/login\");\n    }\n\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined,\n        });\n        localStorage.setItem(\"auth-token\", \"\");\n    }\n\n    return (\n    <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand>Academic Portal IITT</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Link to=\"/\" className=\"nav-links\">Home</Link>\n                    <Link to=\"/Issues\" className=\"nav-links\">Issues</Link>\n                    <Link to=\"/StudyMaterial\" className=\"nav-links\">study material</Link>\n                    {\n                        userData.user ?\n                        <Button onClick={logout}>Logout</Button> :\n                        <>\n                            <Button onClick={register}>Register</Button>\n                            <Button onClick={login}>Login</Button> \n                        </>\n                    }\n                    \n\n                </Nav>\n        </Navbar>\n    </div>\n    );\n}\n\nexport default NavBar;\n\n\n    \n//     return (\n//         <nav className=\"auth-options\">\n//             {\n//                 userData.user ?\n//                 <button onClick={logout}>Logout</button> :\n//                 <>\n//                     <button onClick={register}>Register</button>\n//                     <button onClick={login}>Login</button> \n//                 </>\n//             }\n//         </nav>\n//     )\n","/home/surya/winter_projects/Portal-First-Phase/src/Routes.js",["75","76","77"],"import React, {useState, useEffect} from 'react'\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nimport Navbar from './NavBar';\n\nimport Home from './home/Home';\n\nimport Login from './auth/Login';\nimport Register from './auth/Register';\n\nimport Issues from \"./issues/Issues\";\nimport DiscussionThread from './issues/DiscussionThread/DiscussionThread';\n\nimport StudyMaterial from './study_material/StudyMaterial';\n\n    export default function Routes() {\n    \n\n    return(\n      <>\n        <BrowserRouter>\n                <Navbar />\n                <Switch>\n                    {/* home */}\n                    <Route exact path=\"/\" component={Home} />\n                    {/* Auth */}\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/register\" component={Register} />\n                    {/* Issues  */}\n                    <Route path=\"/issues\" component={Issues} />\n                    <Route path=\"/:id\" component={DiscussionThread} />\n                    <Route path=\"/studymaterial\" component={StudyMaterial} />\n                </Switch>\n        </BrowserRouter>\n    </>\n    )\n}\n\n\n\n","/home/surya/winter_projects/Portal-First-Phase/src/issues/Issues.js",["78"],"import React, { useEffect, useContext, useState } from 'react'\nimport './Issues.css'\nimport IssueCard from './IssueCard.js';\n\nimport api from '../service/index';\n\n// authuntication\nimport {useHistory} from 'react-router-dom';\nimport UserContext from '../context/UserContext';\n\n\n\nexport default function Issues() {\n\n    const [issues, setIssues] = useState([{}]);\n    const [newIssueTitle, setNewIssueTitle] = useState('');\n    const [newIssueBody, setNewIssueBody] = useState('');\n\n\n    const {userData} = useContext(UserContext);\n    const history = useHistory();\n\n    async function fetchData () {\n\n        await api.getAllIssues().then(allIssues => {\n            setIssues(allIssues.data);\n        });\n\n    }\n\n\n    async function postData () {\n        var newIssue = {\n            title: newIssueTitle,\n            user: userData.user.displayName,\n            body: newIssueBody,\n        }\n\n        setNewIssueTitle('');\n        setNewIssueBody('');\n\n        await api.insertIssue(newIssue);\n\n    }\n\n    useEffect(() => {\n        // if(!userData.user) {\n        //     history.push(\"/login\");\n        // }\n\n        fetchData();\n    });\n\n\n    return (\n        <div>\n            <div>\n                <div className=\"issues\">\n                    <div className=\"issues__title\">\n                        <h1>Issues</h1>\n                    </div>\n\n                    <div className=\"issueCard__list\">\n                        {\n                            issues.map((issue, idx) => {\n                                return(\n                                    <IssueCard id={issue._id} title={issue.title} body={issue.body} name={issue.user} createdAt={issue.createdAt}/>\n                                );\n                            })\n                        }\n                    </div>\n\n                <div className=\"panel panel-default post-editor\">\n                    <div className=\"panel-body\">\n                            <textarea   className=\"form-control post-editor-input\" \n                                        name=\"\" id=\"\" \n                                        cols=\"30\" \n                                        rows=\"1\"\n                                        placeholder='title of the issue goes here...'\n                                        value={newIssueTitle}\n                                        onChange={e => {\n                                            setNewIssueTitle(e.target.value);\n                                        }}\n                                        >\n                            </textarea>\n                            <textarea   className=\"form-control post-editor-input\" \n                                        name=\"\" id=\"\" \n                                        cols=\"30\" \n                                        rows=\"3\"\n                                        placeholder='body of issue goes here...'\n                                        value={newIssueBody}\n                                        onChange={e => {\n                                            setNewIssueBody(e.target.value);\n                                        }}\n                                        >\n                            </textarea>\n                            <button className=\"btn btn-success post-editor-button\" \n                                    onClick={e => {\n                                        postData();\n                                    }}>\n                                Post\n                            </button>\n                    </div>\n        \n                    </div>\n                </div>\n\n            </div>\n        );\n        </div>\n    );\n}\n","/home/surya/winter_projects/Portal-First-Phase/src/study_material/StudyMaterial.js",[],"/home/surya/winter_projects/Portal-First-Phase/src/home/Home.js",[],"/home/surya/winter_projects/Portal-First-Phase/src/issues/DiscussionThread/DiscussionThread.js",["79"],"import React, { useEffect, useContext, useState } from 'react'\nimport '../Issues.css';\nimport IssueCard from './Comment.js';\n\nimport api from '../../service/index';\n\n// authuntication\nimport {useHistory, useLocation, useParams} from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\n\n\n\nexport default function Issues() {\n\n    const [issues, setIssues] = useState([{}]);\n    const [newIssueBody, setNewIssueBody] = useState('');\n\n\n    const {userData} = useContext(UserContext);\n    \n    const history = useHistory();\n    const location = useLocation();\n\n\n    const { title, id, issueDescription } = location.state;\n\n    async function fetchData () {\n\n        await api.getCommentsOfIssue(id).then(allIssues => {\n            setIssues(allIssues.data);\n        });\n\n    }\n\n\n    async function postData () {\n        var newIssue = {\n            issueId: id,\n            user: userData.user.displayName,\n            body: newIssueBody,\n        }\n\n        setNewIssueBody('');\n\n        await api.insertCommentOfIssue(id, newIssue);\n\n    }\n\n    useEffect(() => {\n\n        if(!userData.user) {\n            history.push(\"/login\");\n        }\n\n        fetchData();\n    });\n\n\n    return (\n        <div>\n            <div>\n                <div className=\"issues\">\n                    <div className=\"issues__title\">\n                        <h1>{ title } :</h1>\n                    </div>\n\n                    <h3>{ issueDescription }</h3>\n\n                    <div className=\"issueCard__list\">\n                        {   \n                        issues ?\n                            issues.map((issue, idx) => {\n                                return(\n                                    <IssueCard id={issue._id} title={issue.title} body={issue.body} name={issue.user} createdAt={issue.createdAt}/>\n                                );\n                            }) \n                            \n                            :\n                            \n                            <h3>No comments</h3>\n                        }\n                    </div>\n\n                <div className=\"panel panel-default post-editor\">\n                    <div className=\"panel-body\">\n                            <textarea   className=\"form-control post-editor-input\" \n                                        name=\"\" id=\"\" \n                                        cols=\"30\" \n                                        rows=\"3\"\n                                        placeholder='comment for issue goes here...'\n                                        value={newIssueBody}\n                                        onChange={e => {\n                                            setNewIssueBody(e.target.value);\n                                        }}\n                                        >\n                            </textarea>\n                            <button className=\"btn btn-success post-editor-button\" \n                                    onClick={e => {\n                                        postData();\n                                    }}>\n                                Post\n                            </button>\n                    </div>\n        \n                    </div>\n                </div>\n\n            </div>\n        );\n        </div>\n    );\n}\n","/home/surya/winter_projects/Portal-First-Phase/src/issues/IssueCard.js",["80","81","82"],"import React, {useEffect, useContext} from 'react';\nimport './IssueCard.css';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport { Link } from 'react-router-dom';\n\nimport apis from '../service/index';\n\n\nfunction IssueCard(props) {\n\n\n\n    const deleteIssue = async () => {\n        console.log(props.id);\n        const deleteIssue = await apis.removeIssue(props.id);\n    }\n\n    return (\n        <div>\n            \n            <div className=\"issueCard__box\">\n                <ErrorOutlineIcon fontSize=\"small\" htmlColor=\"#22863a\"/>\n                <div>\n                    <Link to={{\n                        pathname: `/${props.id}`,\n                        state: {\n                            title: props.title,\n                            id: props.id,\n                            name: props.name,\n                            issueDescription: props.body,\n                        },\n                    }}>{props.title}</Link>\n\n                    <p>{props.body}</p>\n                    <p className=\"issueCard__text\">{`#Opened by ${ props.name } at ${props.createdAt}`}</p>\n                </div>\n                <div className=\"delete-icon\" onClick={deleteIssue}><DeleteIcon/></div>\n            </div>\n        </div>\n    )\n}\n\nexport default IssueCard\n","/home/surya/winter_projects/Portal-First-Phase/src/issues/DiscussionThread/Comment.js",["83","84","85"],"import React, {useEffect, useContext} from 'react'\nimport '../IssueCard.css'\nimport UserContext from '../../context/UserContext';\n\nfunction IssueCard(props) {\n\n    return (\n        <div>\n            \n            <div className=\"issueCard__box\">\n                <div>\n                    <h6>{props.name} <p className=\"issueCard__text\">{`commented on ${props.createdAt}`}</p></h6>\n                    <hr></hr>\n                    <p>{props.body}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default IssueCard","/home/surya/winter_projects/Portal-First-Phase/src/auth/Login.js",[],"/home/surya/winter_projects/Portal-First-Phase/src/auth/Register.js",[],"/home/surya/winter_projects/Portal-First-Phase/src/context/UserContext.js",[],"/home/surya/winter_projects/Portal-First-Phase/src/service/index.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":14},{"ruleId":"90","severity":1,"message":"94","line":2,"column":23,"nodeType":"92","messageId":"93","endLine":2,"endColumn":27},{"ruleId":"90","severity":1,"message":"95","line":2,"column":37,"nodeType":"92","messageId":"93","endLine":2,"endColumn":48},{"ruleId":"90","severity":1,"message":"96","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":24},{"ruleId":"90","severity":1,"message":"97","line":1,"column":26,"nodeType":"92","messageId":"93","endLine":1,"endColumn":35},{"ruleId":"90","severity":1,"message":"98","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":13},{"ruleId":"90","severity":1,"message":"99","line":21,"column":11,"nodeType":"92","messageId":"93","endLine":21,"endColumn":18},{"ruleId":"90","severity":1,"message":"100","line":8,"column":34,"nodeType":"92","messageId":"93","endLine":8,"endColumn":43},{"ruleId":"90","severity":1,"message":"97","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"101","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":37},{"ruleId":"90","severity":1,"message":"102","line":16,"column":15,"nodeType":"92","messageId":"93","endLine":16,"endColumn":26},{"ruleId":"90","severity":1,"message":"97","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"101","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":37},{"ruleId":"90","severity":1,"message":"103","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":19},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormControl' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Axios' is defined but never used.","'history' is assigned a value but never used.","'useParams' is defined but never used.","'useContext' is defined but never used.","'deleteIssue' is assigned a value but never used.","'UserContext' is defined but never used.","no-global-assign","no-unsafe-negation"]