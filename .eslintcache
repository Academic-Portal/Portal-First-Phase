[{"/home/surya/winter_projects/Portal-First-Phase/src/index.js":"1","/home/surya/winter_projects/Portal-First-Phase/src/App.js":"2","/home/surya/winter_projects/Portal-First-Phase/src/reportWebVitals.js":"3","/home/surya/winter_projects/Portal-First-Phase/src/NavBar.js":"4","/home/surya/winter_projects/Portal-First-Phase/src/Routes.js":"5","/home/surya/winter_projects/Portal-First-Phase/src/issues/Issues.js":"6","/home/surya/winter_projects/Portal-First-Phase/src/study_material/StudyMaterial.js":"7","/home/surya/winter_projects/Portal-First-Phase/src/home/Home.js":"8","/home/surya/winter_projects/Portal-First-Phase/src/issues/DiscussionThread/DiscussionThread.js":"9","/home/surya/winter_projects/Portal-First-Phase/src/issues/IssueCard.js":"10","/home/surya/winter_projects/Portal-First-Phase/src/issues/DiscussionThread/Comment.js":"11","/home/surya/winter_projects/Portal-First-Phase/src/auth/Login.js":"12","/home/surya/winter_projects/Portal-First-Phase/src/auth/Register.js":"13","/home/surya/winter_projects/Portal-First-Phase/src/context/UserContext.js":"14"},{"size":547,"mtime":1610161422986,"results":"15","hashOfConfig":"16"},{"size":226,"mtime":1610186805733,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1610161422986,"results":"18","hashOfConfig":"16"},{"size":1927,"mtime":1610187762868,"results":"19","hashOfConfig":"16"},{"size":2246,"mtime":1610186805733,"results":"20","hashOfConfig":"16"},{"size":2405,"mtime":1610186805733,"results":"21","hashOfConfig":"16"},{"size":501,"mtime":1610187743211,"results":"22","hashOfConfig":"16"},{"size":536,"mtime":1610187729561,"results":"23","hashOfConfig":"16"},{"size":2655,"mtime":1610161422986,"results":"24","hashOfConfig":"16"},{"size":873,"mtime":1610164496326,"results":"25","hashOfConfig":"16"},{"size":292,"mtime":1610161422986,"results":"26","hashOfConfig":"16"},{"size":1880,"mtime":1610162006798,"results":"27","hashOfConfig":"16"},{"size":2699,"mtime":1610162057490,"results":"28","hashOfConfig":"16"},{"size":75,"mtime":1610186805733,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1804toi",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/surya/winter_projects/Portal-First-Phase/src/index.js",[],["64","65"],"/home/surya/winter_projects/Portal-First-Phase/src/App.js",["66","67"],"import './App.css';\n\nimport React, { Component } from \"react\";\n\nimport Navbar from \"./NavBar\";\nimport Routes from \"./Routes\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Routes />\n    </div>    \n  );\n}\n\nexport default App;\n","/home/surya/winter_projects/Portal-First-Phase/src/reportWebVitals.js",[],"/home/surya/winter_projects/Portal-First-Phase/src/NavBar.js",["68","69"],"/home/surya/winter_projects/Portal-First-Phase/src/Routes.js",[],"/home/surya/winter_projects/Portal-First-Phase/src/issues/Issues.js",["70","71","72"],"import React, { Component, useEffect, useContext, useState } from 'react'\nimport './Issues.css'\nimport IssueCard from './IssueCard.js';\nimport { Button } from '@material-ui/core';\nimport Issue from './DiscussionThread/Comment';\n\n// authuntication\nimport {useHistory} from 'react-router-dom';\nimport UserContext from '../context/UserContext';\n\n\n\nexport default function Issues() {\n\n    const [issues, setIssues] = useState([]);\n    const [newIssueBody, setNewIssueBody] = useState('');\n\n    const {userData} = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if(!userData.user) {\n            history.push(\"/login\");\n        }\n    });\n\n\n    return (\n        <div>\n            <div>\n                <div className=\"issues\">\n                    <div className=\"issues__title\">\n                        <h1>Issues</h1>\n                    </div>\n\n                    <div className=\"issueCard__list\">\n                        {\n                            issues.map((issue) => {\n                                return(\n                                    <IssueCard title={issue}/>\n                                );\n                            })\n                        }\n                    </div>\n\n                <div className=\"panel panel-default post-editor\">\n                    <div className=\"panel-body\">\n                            <textarea   className=\"form-control post-editor-input\" \n                                        name=\"\" id=\"\" \n                                        cols=\"30\" \n                                        rows=\"3\"\n                                        placeholder='please post your issue here...'\n                                        onChange={e => {\n                                            setNewIssueBody(e.target.value);\n                                        }}\n                                        >\n                            </textarea>\n                            <button className=\"btn btn-success post-editor-button\" \n                                    onClick={e => {\n                                        setIssues([...issues, newIssueBody]);\n                                    }}>\n                                Post\n                            </button>\n                    </div>\n        \n                    </div>\n                </div>\n\n            </div>\n        );\n        </div>\n    );\n}\n","/home/surya/winter_projects/Portal-First-Phase/src/study_material/StudyMaterial.js",[],"/home/surya/winter_projects/Portal-First-Phase/src/home/Home.js",[],"/home/surya/winter_projects/Portal-First-Phase/src/issues/DiscussionThread/DiscussionThread.js",[],"/home/surya/winter_projects/Portal-First-Phase/src/issues/IssueCard.js",["73","74","75","76"],"import React, {useEffect, useContext} from 'react'\nimport './IssueCard.css'\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport { Link } from 'react-router-dom';\n\nfunction IssueCard(props) {\n\n    return (\n        <div>\n            \n            <div className=\"issueCard__box\">\n                <ErrorOutlineIcon fontSize=\"small\" htmlColor=\"#22863a\"/>\n                <div>\n                    <p className=\"issueCard__title\">name1</p>\n                    <Link to={{\n                        pathname: '/DiscussionThread',\n                        aboutProps: {\n                            title: props.title,\n                        }\n                    }}>{props.title}</Link>\n\n                    <p className=\"issueCard__text\">#Opened by darahas 4 hours go</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default IssueCard\n","/home/surya/winter_projects/Portal-First-Phase/src/issues/DiscussionThread/Comment.js",[],"/home/surya/winter_projects/Portal-First-Phase/src/auth/Login.js",["77"],"import React, {useState, useContext} from 'react';\nimport UserContext from '../context/UserContext';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\n\nexport default function Login() {\n\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [error, setError] = useState();\n    \n    const { setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const submit = async (e) => {\n\n        try {\n            e.preventDefault();\n            const loginUser = {email, password};\n            const loginRes = await Axios.post(\n                \"http://localhost:5000/users/login\", loginUser);\n            setUserData({\n                token: loginRes.data.token,\n                user: loginRes.data.user,\n            });\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\n            history.push(\"/\");\n        } catch (err) {\n            if(err.response.data.msg) {\n                setError(err.response.data.msg);\n            }\n        }\n    };\n\n    return (\n        <div className=\"page\">\n            {/* {error && \n                <ErrorNotice message={error} clearError={() => setError(undefined)}/>} */}\n            <h2>Log in</h2>\n            <form className=\"form\" onSubmit={submit}>\n                <label htmlFor=\"login-email\">Email</label>\n                <input \n                    id=\"login-email\" \n                    type=\"email\"\n                    onChange={e => setEmail(e.target.value)}\n                />\n\n                <label htmlFor=\"login-password\">Password</label>\n                <input \n                    id=\"login-password\"\n                    type=\"password\"\n                    onChange={e => setPassword(e.target.value)}    \n                />\n\n                <input type=\"submit\" value=\"Login\" />\n            </form>\n        </div>\n    )\n}\n","/home/surya/winter_projects/Portal-First-Phase/src/auth/Register.js",["78"],"import React, {useState, useContext} from 'react';\nimport UserContext from '../context/UserContext';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\n\nexport default function Register() {\n    \n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [passwordCheck, setPasswordCheck] = useState();\n    const [displayName, setDisplayName] = useState();\n    const [error, setError] = useState();\n\n    const { setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const submit = async (e) => {\n\n        try {\n            e.preventDefault();\n            const newUser = {email, password, passwordCheck, displayName};\n            await Axios.post(\n                \"http://localhost:5000/users/register\",\n                newUser\n            );\n            const loginRes = await Axios.post(\n                \"http://localhost:5000/users/login\", {\n                    email,\n                    password,\n                });\n            setUserData({\n                token: loginRes.data.token,\n                user: loginRes.data.user,\n            });\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\n            history.push(\"/\");\n\n        } catch (err) {\n            if(err.response.data.msg) {\n                setError(err.response.data.msg);\n            }\n        }\n    };\n\n    return (\n        <div className=\"page\">\n            <h2>Register</h2>\n            {/* {error && \n                <ErrorNotice message={error} clearError={() => setError(undefined)}/>} */}\n            <form className=\"form\" onSubmit={submit}>\n                <label htmlFor=\"register-email\">Email</label>\n                <input \n                    id=\"register-email\" \n                    type=\"email\"\n                    onChange={e => setEmail(e.target.value)}\n                />\n\n                <label htmlFor=\"register-password\">Password</label>\n                <input \n                    id=\"register-password\" \n                    type=\"password\"\n                    onChange={e => setPassword(e.target.value)}    \n                />\n                <input \n                    type=\"password\" \n                    placeholder=\"verify password\"\n                    onChange={e => setPasswordCheck(e.target.value)}\n                />\n\n                <label htmlFor=\"register-display-name\">Display Name</label>\n                <input \n                    id=\"register-display-name\" \n                    type=\"text\" \n                    onChange={e => setDisplayName(e.target.value)}\n                />\n\n                <input type=\"submit\" value=\"Register\" />\n            </form>\n        </div>\n    )\n}\n","/home/surya/winter_projects/Portal-First-Phase/src/context/UserContext.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":3,"column":17,"nodeType":"85","messageId":"86","endLine":3,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":14},{"ruleId":"83","severity":1,"message":"88","line":2,"column":23,"nodeType":"85","messageId":"86","endLine":2,"endColumn":27},{"ruleId":"83","severity":1,"message":"89","line":2,"column":37,"nodeType":"85","messageId":"86","endLine":2,"endColumn":48},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"90","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":16},{"ruleId":"83","severity":1,"message":"91","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":13},{"ruleId":"83","severity":1,"message":"92","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"93","line":1,"column":27,"nodeType":"85","messageId":"86","endLine":1,"endColumn":37},{"ruleId":"83","severity":1,"message":"94","line":8,"column":9,"nodeType":"85","messageId":"86","endLine":8,"endColumn":19},{"ruleId":"83","severity":1,"message":"95","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":19},{"ruleId":"83","severity":1,"message":"96","line":10,"column":12,"nodeType":"85","messageId":"86","endLine":10,"endColumn":17},{"ruleId":"83","severity":1,"message":"96","line":12,"column":12,"nodeType":"85","messageId":"86","endLine":12,"endColumn":17},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'Issue' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'useHistory' is defined but never used.","'UserContext' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]